# ------------------------------------------------------------------------------
# This is an example file to get you started with using
# declarative configuration in Kong.
# ------------------------------------------------------------------------------

# Metadata fields start with an underscore (_)
# Fields that do not start with an underscore represent Kong entities and attributes

# _format_version is mandatory,
# it specifies the minimum version of Kong that supports the format

_format_version: "1.1"

# Each Kong entity (core entity or custom entity introduced by a plugin)
# can be listed in the top-level as an array of objects:

services:
  - name: auth
    host: auth
    port: 8080
    protocol: http
    routes:
      - name: healthz
        paths:
          - "/healthz"
        strip_path: false
      - name: login
        paths:
          - "/login"
        strip_path: false
        methods:
          - "POST"
      - name: me
        paths:
          - "/me"
        strip_path: false
        plugins:
          - name: jwt
            config:
              cookie_names:
                - "token"
              claims_to_verify:
                - "exp"
      - name: signup
        paths:
          - "/signup"
        strip_path: false
        methods:
          - "POST"
  - name: bookings
    host: bookings
    port: 5000
    protocol: http
    routes:
      - name: bookings_get
        strip_path: false
        paths:
          - "/bookings"
        methods:
          - "GET"
      - name: bookings_post
        strip_path: false
        paths:
          - "/bookings"
        methods:
          - "POST"
        plugins:
          - name: jwt
            config:
              cookie_names:
                - "token"
              claims_to_verify:
                - "exp"
      - name: seatings
        strip_path: false
        paths:
          - "/seatings"
  - name: movies
    host: movies
    port: 5000
    protocol: http
    routes:
      - name: movies_post
        strip_path: false
        methods:
          - "POST"
        paths:
          - "/movies"
        plugins:
          - name: jwt
            config:
              cookie_names:
                - "token"
              claims_to_verify:
                - "exp"
          - name: acl
            config:
              allow:
                - manager
              hide_groups_header: true
      - name: movies_get
        strip_path: false
        methods:
          - "GET"
        paths:
          - "/movies"
  - name: payments
    host: payments
    port: 5000
    protocol: http
    routes:
      - name: transaction
        strip_path: false
        paths:
          - "/transaction"
      - name: create-checkout-session
        strip_path: false
        paths:
          - "/create-checkout-session"
      - name: payment_success
        strip_path: false
        paths:
          - "/payment_success"
    plugins:
      - name: jwt
        config:
          cookie_names:
            - "token"
          claims_to_verify:
            - "exp"
  - name: showtime
    host: showtime
    port: 5000
    protocol: http
    routes:
      - name: showtime_get
        strip_path: false
        paths:
          - "/showtimes"
        methods:
          - 'GET'
          - 'OPTIONS'
      - name: showtime_post
        strip_path: false
        paths:
          - "/showtimes"
        methods:
          - 'POST'
          - 'DELETE'
        plugins:
          - name: jwt
            config:
              cookie_names:
                - "token"
              claims_to_verify:
                - "exp"
  - name: rating
    host: rating
    port: 5000
    protocol: http
    routes:
      - name: rating
        strip_path: false
        paths:
          - "/rating"
  - name: trailer
    host: trailer
    port: 5000
    protocol: http
    routes:
      - name: trailer
        strip_path: false
        paths:
          - "/trailer"
  - name: list-all-movies
    host: list-all-movies
    port: 5000
    protocol: http
    routes:
      - name: list-all-movies
        strip_path: false
        paths:
          - "/list-all-movies"
  - name: add-a-showtime
    host: add-a-showtime
    port: 5000
    protocol: http
    routes:
      - name: add-a-showtime
        strip_path: false
        paths:
          - "/add-a-showtime"
    plugins:
      - name: jwt
        config:
          cookie_names:
            - "token"
          claims_to_verify:
            - "exp"
      - name: acl
        config:
          allow:
            - manager
          hide_groups_header: true
  - name: place-a-booking
    host: place-a-booking
    port: 5000
    protocol: http
    routes:
      - name: place-a-booking
        strip_path: false
        paths:
          - "/place-a-booking"
      - name: place-a-booking-success
        strip_path: false
        paths:
          - "/place-a-booking-success"
    plugins:
      - name: jwt
        config:
          cookie_names:
            - "token"
          claims_to_verify:
            - "exp"
  - name: movie-details
    host: movie-details
    port: 5000
    protocol: http
    routes:
      - name: movie-details
        strip_path: false
        paths:
          - "/movie-details"

# - name: example-service
#   url: http://example.com
#   # Entities can store tags as metadata
#   tags:
#   - example
#   # Entities that have a foreign-key relationship can be nested:
#   routes:
#   - name: example-route
#     paths:
#     - /
plugins:
  - name: zipkin
    config:
      local_service_name: kong
      http_endpoint: http://${{ env "DECK_ZIPKIN_HOST" }}:9411/api/v2/spans
      sample_ratio: 1
      include_credential: true
      traceid_byte_count: 16
      header_type: preserve
      default_header_type: b3
      tags_header: Zipkin-Tags
  - name: cors
    config:
      origins:
        - "http://localhost:3000"
      credentials: true
#   - name: key-auth
# - name: another-service
#   url: https://example.org

# routes:
# - name: another-route
#   # Relationships can also be specified between top-level entities,
#   # either by name or by id
#   service: example-service
#   hosts: ["hello.com"]

# consumers:
# - username: example-user
#   # Custom entities from plugin can also be specified
#   # If they specify a foreign-key relationshp, they can also be nested
#   keyauth_credentials:
#   - key: my-key
#   plugins:
#   - name: rate-limiting
#     _comment: "these are default rate-limits for user example-user"
#     config:
#       policy: local
#       second: 5
#       hour: 10000

# When an entity has multiple foreign-key relationships
# (e.g. a plugin matching on both consumer and service)
# it must be specified as a top-level entity, and not through
# nesting.

# plugins:
# - name: rate-limiting
#   consumer: example-user
#   service: another-service
#   _comment: "example-user is extra limited when using another-service"
#   config:
#     hour: 2
#   # tags are for your organization only and have no meaning for Kong:
#   tags:
#   - extra_limits
#   - my_tag
